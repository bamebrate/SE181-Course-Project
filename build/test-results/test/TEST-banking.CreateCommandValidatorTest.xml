<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="banking.CreateCommandValidatorTest" tests="55" skipped="0" failures="0" errors="0" timestamp="2023-11-30T20:57:50" hostname="n3-93-174.dhcp.drexel.edu" time="0.025">
  <properties/>
  <testcase name="balance_not_specified_for_CD_account()" classname="banking.CreateCommandValidatorTest" time="0.005"/>
  <testcase name="cd_account_balance_is_1000()" classname="banking.CreateCommandValidatorTest" time="0.001"/>
  <testcase name="can_create_an_account_with_max_ten_percent_for_savings()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="string_is_missing_savings_command()" classname="banking.CreateCommandValidatorTest" time="0.001"/>
  <testcase name="APR_is_within_range_for_checking()" classname="banking.CreateCommandValidatorTest" time="0.001"/>
  <testcase name="ID_and_Apr_and_balance_are_not_provided_for_cd()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="Apr_is_more_than_range_for_cd()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="APR_is_within_range_for_savings()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="ID_is_not_provided_for_cd()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="creating_a_valid_checking_account()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="creating_a_checking_account_with_a_duplicate_ID()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="ID_and_Apr_and_account_type_are_not_provided()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="ID_and_Apr_is_not_provided_for_cd()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="Apr_is_less_than_range_for_cd()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="ID_is_not_numbers_for_savings()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="creating_a_valid_CD_account()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="ID_is_not_numbers_for_cd()" classname="banking.CreateCommandValidatorTest" time="0.001"/>
  <testcase name="balance_is_negative_value()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="creating_a_cd_account_with_a_duplicate_ID()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="checking_command_is_missing()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="ID_is_not_numbers_for_checking()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="cd_command_is_missing()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="ID_is_not_8_digits_for_cd()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="ID_is_not_provided_for_checking()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="APR_is_not_provided_for_savings()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="Apr_is_more_than_range_for_checking()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="savings_is_in_all_caps()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="APR_is_not_double_for_savings()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="can_create_an_account_with_zero_apr_for_savings()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="can_create_an_account_with_max_ten_percent_for_checking()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="cd_account_balance_is_over_10000()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="cd_is_spelled_incorrectly()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="Apr_is_less_than_range_for_checking()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="creating_a_savings_account_with_a_duplicate_ID()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="ID_and_Apr_is_not_provided_for_checking()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="ID_is_not_8_digits_for_savings()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="APR_is_not_provided_for_checking()" classname="banking.CreateCommandValidatorTest" time="0.001"/>
  <testcase name="APR_is_not_double_for_checking()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="savings_is_spelled_incorrectly()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="cd_account_balance_is_under_1000()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="checking_is_spelled_incorrectly()" classname="banking.CreateCommandValidatorTest" time="0.001"/>
  <testcase name="Apr_is_more_than_zero_for_savings()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="can_create_an_account_with_zero_apr_for_checking()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="cd_account_balance_is_10000()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="APR_is_not_double_for_cd()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="string_is_missing_create_command_for_savings()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="ID_and_Apr_is_not_provided_for_savings()" classname="banking.CreateCommandValidatorTest" time="0.001"/>
  <testcase name="balance_is_invalid_type()" classname="banking.CreateCommandValidatorTest" time="0.001"/>
  <testcase name="checking_is_in_all_caps()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="ID_is_not_provided_for_savings()" classname="banking.CreateCommandValidatorTest" time="0.001"/>
  <testcase name="missing_every_command_or_is_empty()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="ID_is_not_8_digits_for_checking()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="APR_is_within_range_for_cd()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <testcase name="APR_is_not_provided_for_cd()" classname="banking.CreateCommandValidatorTest" time="0.001"/>
  <testcase name="Apr_is_less_than_range_for_savings()" classname="banking.CreateCommandValidatorTest" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
